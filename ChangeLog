8/4/08:
 -Fixed Java 1.6 error when shrinking default UI font sizes.

11/12/05:
 -Refactored the code for displaying MIBObject details and context popup menus out of MIBBrowser and put them in seperate modules.
 -Consolidated 'maxAccess' and 'access' attributes.  There is no discernible reason to keep them seperate.
 -Converted MIBObject 'access' and 'status' attributes into Java 1.5 enums.
 -Implemented Java 1.5 enhanced for-loop in some places for readability.

10/21/05:
 -Finally cleaned up the algorithm for formatting in TimeTicks' to String method.  Used modulus and eliminated NumberFormatter; kind of 
  embarrassing.

9/23/05:
 -Moved initialization of MIBBrowser's MIBTreeCompiler into static main in order to catch XML object initialization exceptions. Also, 
  the code in MIBBrowser itself is no longer MIBTreeCompiler flavor-specific (XML or SMI).

9/18/05:
 -Modified MIBTreeCompilerXML so that the Validator and parser are reused.  Also fixed bug that was not allowing XML MIBs that are
  formatted.

8/30/05:
 -Finally went ahead and upped compiler compliance to 1.5 since several 1.5-only methods were used anyway.  This allowed me to use generics
  to enforce stronger typing for Lists.  As a result, some casting was reduced as well.
 -Modified the way value lists in SMI MIB files were read.

8/26/05:
 -Rearranged some exception handling code and changed the mib compilers to throw invalid format exceptions to a higher level.
 -Significantly changed the way the MIBInvalidFormat exceptions work.
 -Renamed MIB tree compiler method compileMIBTree to addMIBDirectory.

8/19/05:
 -Implemented Revisions/Descriptions in the converter.
 -Fixed bug pertaining to MIB documents that have mixed new line characters for some reason.
 -Created MIBObjectSyntax class to contain an oid's data type, default value, and value list enumeration.  This changed quite a few classes
  so hopefully new bugs haven't been introduced.

8/18/05:
 -Continued work on the MIB XML format.  Updated schemas to restrict elements with string contents to 1 or more characters.  Also updated
  MIBTreeCompilerXML to disallow whitespace-only contents for the name element.  Basically, pre-emptive bug squashing.
 -Updated the code in MIBTreeCompilerSMI to implement the new changes made in MIBToXMLConverter.

8/17/05:
 -Completely overhauled the way lists such as those for SYNTAX and OBJECT-GROUPs are handled.  The method is similar to that used
  to read text between quote marks.  Also updated CONTACT-INFO handling to use the same method DESCRIPTION uses.
 -Implemented REFERENCE and INDEX and moved reference, default value, and indices to the basic MIBObject class.

8/16/05:
 -Completely overhauled the ways IMPORTS and DESCRIPTION is handled in MIBToXMLConverter.

8/15/05:
 -Changed the MIBToXMLConverter to fix a bug that occurred when oid value lists were structured like the following:
  {value1(1), value2(2),
  	value3(3)}
 -Also changed the converter to convert the illegal character sequence '--' to '**' within comments.
 -Added a method for using a "lost children" list for individual MIB files as well as the previous behavior of 
  tracking parentless nodes across files.

8/12/05:
 -Modified the methods of several classes to use interfaces as the parameter and return types in order to improve flexibility.

8/9/05: 
 -Worked extensively on a solution to detect whether an OctetString is binary data or text in order to 
  display it properly.  This was done at the SNMP implementation level.

7/27/05: 
 -Implemented a HashMap in the MIB tree compilers to track existing nodes for quick searching during MIB 
  tree construction.  However, this led me to disable the ability to import and dump the MIB tree due to the fact 
  that an imported tree will have no associated HashMap. Dammit. I could dump the HashMap too, but that would be 
  huge, and a dumped tree already takes a long time to load.  I also don't want to separate the Hash from the tree 
  model.  I may try to come up with a better way later as part of a sort of "Save Session" feature.
 -Fixed a bug in MIBTreeCompilerASN that was a result of not reading past information for already existing nodes.
 -Note to self: Consider renaming the "compilers" to "managers" because it's a more accurate description of their
  functionality.

7/26/05: 
 -Separated the SwingWorker inner class into a new class, MIBGetWorker, that extends SwingWorker.  Three
  protected update methods serve as the interface between MIBBrowser and MIBGetWorker.  This may be changed back
  to the previous implementation if problems arise.

7/25/05: 
 -Rewrote code that parses the ip addresses property in order to enforce the maximum number.

7/22/05: 
 -Added context popup menus to the OID detail text components. Improved popup context menu item 
  handling.
 -Fixed small visual error dealing with popup focus.
 
7/20/05: 
 -Separated classes dealing strictly with MIBs functionality into a new package, libmib.

7/18/05: 
 -Created MIBCompilerSMI class using the updated ASN.1 SMI MIB module parsing code from the
  MIBToXMLConverter.  Now the two compilers, XML and SMI, are swappable in the application because
  of the common interface. I still do not like the SMI parsing code, however, and will continue to use XML.

7/17/05: 
 -Created MIBTreeCompiler interface and MIBTreeCompilerXML class in order to move the code for adding
  MIB files to a DefaultTreeModel out of the application core, thus making the code more modular.

7/15/05: 
 -Implemented a way to automatically save and load the last ten valid IP addresses and show them in a combo box.

7/14/05: 
 -Updated SNMP package to version 1.4 and applied my changes. (also decided to start this changelog...
  better extremely late than never, I suppose)
