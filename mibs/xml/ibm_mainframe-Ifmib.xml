<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<mib name="IF-MIB">
    <imports>
        <source name="SNMPv2-SMI">
            <import>MODULE-IDENTITY</import>
            <import>OBJECT-TYPE</import>
            <import>Counter32</import>
            <import>Gauge32</import>
            <import>Counter64</import>
            <import>Integer32</import>
            <import>TimeTicks</import>
            <import>NOTIFICATION-TYPE</import>
        </source>
        <source name="SNMPv2-TC">
            <import>TEXTUAL-CONVENTION</import>
            <import>DisplayString</import>
            <import>PhysAddress</import>
            <import>TruthValue</import>
            <import>RowStatus</import>
            <import>AutonomousType</import>
            <import>TestAndIncr</import>
        </source>
        <source name="SNMPv2-CONF">
            <import>MODULE-COMPLIANCE</import>
            <import>OBJECT-GROUP</import>
        </source>
        <source name="SNMPv2-MIB">
            <import>snmpTraps</import>
        </source>
        <source name="IANAifType-MIB">
            <import>IANAifType</import>
        </source>
        <source name="RFC1213-MIB">
            <import>mib-2</import>
            <import>interfaces</import>
        </source>
    </imports>
    <objects>
        <object>
            <moduleIdentity>
                <objectName>ifMIB</objectName>
                <objectId>31</objectId>
                <parent>mib-2</parent>
                <lastUpdated>9602221355Z</lastUpdated>
                <organization>IETF Interfaces MIB Working Group</organization>
                <contactInfo>Keith McCloghrie&lt;br&gt;Cisco Systems, Inc.&lt;br&gt;170 West Tasman Drive&lt;br&gt;San Jose, CA  95134-1706&lt;br&gt;US&lt;br&gt;&lt;br&gt;408-526-5260&lt;br&gt;kzm@cisco.com</contactInfo>
                <description>The MIB module to describe generic objects for&lt;br&gt;network interface sub-layers.  This MIB is an updated&lt;br&gt;version of MIB-II's ifTable, and incorporates the&lt;br&gt;extensions defined in RFC 1229.</description>
                <revision revisionId="9602282155Z">
                    <description>Revisions made by the Interfaces MIB WG.</description>
                </revision>
                <revision revisionId="9311082155Z">
                    <description>Initial revision, published as part of RFC 1573.</description>
                </revision>
            </moduleIdentity>
        </object>
        <object>
            <objectIdentifier>
                <objectName>ifMIBObjects</objectName>
                <objectId>1</objectId>
                <parent>ifMIB</parent>
            </objectIdentifier>
        </object>
        <object>
            <objectType>
                <objectName>ifNumber</objectName>
                <objectId>1</objectId>
                <parent>interfaces</parent>
                <syntax>
                    <type>Integer32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of network interfaces (regardless of their&lt;br&gt;current state) present on this system.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTableLastChange</objectName>
                <objectId>5</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <type>TimeTicks</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The value of sysUpTime at the time of the last&lt;br&gt;creation or deletion of an entry in the ifTable.  If&lt;br&gt;the number of entries has been unchanged since the&lt;br&gt;last re-initialization of the local network management&lt;br&gt;subsystem, then this object contains a zero value.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTable</objectName>
                <objectId>2</objectId>
                <parent>interfaces</parent>
                <syntax>
                    <sequence>IfEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>A list of interface entries.  The number of entries&lt;br&gt;is given by the value of ifNumber.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifEntry</objectName>
                <objectId>1</objectId>
                <parent>ifTable</parent>
                <syntax>
                    <type>IfEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>An entry containing management information applicable&lt;br&gt;to a particular interface.</description>
                <indices>
                    <index>ifIndex</index>
                </indices>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifIndex</objectName>
                <objectId>1</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>InterfaceIndex</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>A unique value, greater than zero, for each&lt;br&gt;interface.  It is recommended that values are assigned&lt;br&gt;contiguously starting from 1.  The value for each&lt;br&gt;interface sub-layer must remain constant at least from&lt;br&gt;one re-initialization of the entity's network&lt;br&gt;management system to the next re-initialization.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifDescr</objectName>
                <objectId>2</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>A textual string containing information about the&lt;br&gt;interface.  This string should include the name of the&lt;br&gt;manufacturer, the product name and the version of the&lt;br&gt;interface hardware/software.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifType</objectName>
                <objectId>3</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>IANAifType</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The type of interface.  Additional values for ifType&lt;br&gt;are assigned by the Internet Assigned Numbers&lt;br&gt;Authority (IANA), through updating the syntax of the&lt;br&gt;IANAifType textual convention.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifMtu</objectName>
                <objectId>4</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Integer32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The size of the largest packet which can be&lt;br&gt;sent/received on the interface, specified in octets.&lt;br&gt;For interfaces that are used for transmitting network&lt;br&gt;datagrams, this is the size of the largest network&lt;br&gt;datagram that can be sent on the interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifSpeed</objectName>
                <objectId>5</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Gauge32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>An estimate of the interface's current bandwidth in&lt;br&gt;bits per second.  For interfaces which do not vary in&lt;br&gt;bandwidth or for those where no accurate estimation&lt;br&gt;can be made, this object should contain the nominal&lt;br&gt;bandwidth.  If the bandwidth of the interface is&lt;br&gt;greater than the maximum value reportable by this&lt;br&gt;object then this object should report its maximum&lt;br&gt;value (4,294,967,295) and ifHighSpeed must be used to&lt;br&gt;report the interace's speed.  For a sub-layer which&lt;br&gt;has no concept of bandwidth, this object should be&lt;br&gt;zero.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifPhysAddress</objectName>
                <objectId>6</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>PhysAddress</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The interface's address at its protocol sub-layer.&lt;br&gt;For example, for an 802.x interface, this object&lt;br&gt;normally contains a MAC address.  The interface's&lt;br&gt;media-specific MIB must define the bit and byte&lt;br&gt;ordering and the format of the value of this object.&lt;br&gt;For interfaces which do not have such an address&lt;br&gt;(e.g., a serial line), this object should contain an&lt;br&gt;octet string of zero length.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifAdminStatus</objectName>
                <objectId>7</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>up</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>down</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>testing</pairName>
                            <pairValue>3</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                </syntax>
                <access>read-write</access>
                <status>current</status>
                <description>The desired state of the interface.  The testing(3)&lt;br&gt;state indicates that no operational packets can be&lt;br&gt;passed.  When a managed system initializes, all&lt;br&gt;interfaces start with ifAdminStatus in the down(2)&lt;br&gt;state.  As a result of either explicit management&lt;br&gt;action or per configuration information retained by&lt;br&gt;the managed system, ifAdminStatus is then changed to&lt;br&gt;either the up(1) or testing(3) states (or remains in&lt;br&gt;the down(2) state).</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOperStatus</objectName>
                <objectId>8</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>up</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>down</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>testing</pairName>
                            <pairValue>3</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>unknown</pairName>
                            <pairValue>4</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>dormant</pairName>
                            <pairValue>5</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>notPresent</pairName>
                            <pairValue>6</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The current operational state of the interface.  The&lt;br&gt;testing(3) state indicates that no operational packets&lt;br&gt;can be passed.  If ifAdminStatus is down(2) then&lt;br&gt;ifOperStatus should be down(2).  If ifAdminStatus is&lt;br&gt;changed to up(1) then ifOperStatus should change to&lt;br&gt;up(1) if the interface is ready to transmit and&lt;br&gt;receive network traffic; it should change to&lt;br&gt;dormant(5) if the interface is waiting for external&lt;br&gt;actions (such as a serial line waiting for an incoming&lt;br&gt;connection); it should remain in the down(2) state if&lt;br&gt;and only if there is a fault that prevents if from&lt;br&gt;going to the up(1) state; it should remain in the&lt;br&gt;notPresent(6) state if the interface has missing&lt;br&gt;(typically, hardware) components.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifLastChange</objectName>
                <objectId>9</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>TimeTicks</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The value of sysUpTime at the time the interface&lt;br&gt;entered its current operational state.  If the current&lt;br&gt;state was entered prior to the last re-initialization&lt;br&gt;of the local network management subsystem, then this&lt;br&gt;object contains a zero value.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInOctets</objectName>
                <objectId>10</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of octets received on the interface,&lt;br&gt;including framing characters.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInUcastPkts</objectName>
                <objectId>11</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were not addressed to a&lt;br&gt;multicast or broadcast address at this sub-layer.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInNUcastPkts</objectName>
                <objectId>12</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were addressed to a&lt;br&gt;multicast or broadcast address at this sub-layer.&lt;br&gt;&lt;br&gt;This object is deprecated in favour of&lt;br&gt;ifInMulticastPkts and ifInBroadcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInDiscards</objectName>
                <objectId>13</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of inbound packets which were chosen to be&lt;br&gt;discarded even though no errors had been detected to&lt;br&gt;prevent their being deliverable to a higher-layer&lt;br&gt;protocol.  One possible reason for discarding such a&lt;br&gt;packet could be to free up buffer space.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInErrors</objectName>
                <objectId>14</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>For packet-oriented interfaces, the number of inbound&lt;br&gt;packets that contained errors preventing them from&lt;br&gt;being deliverable to a higher-layer protocol.  For&lt;br&gt;character-oriented or fixed-length interfaces, the&lt;br&gt;number of inbound transmission units that contained&lt;br&gt;errors preventing them from being deliverable to a&lt;br&gt;higher-layer protocol.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInUnknownProtos</objectName>
                <objectId>15</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>For packet-oriented interfaces, the number of packets&lt;br&gt;received via the interface which were discarded&lt;br&gt;because of an unknown or unsupported protocol.  For&lt;br&gt;character-oriented or fixed-length interfaces which&lt;br&gt;support protocol multiplexing the number of&lt;br&gt;transmission units received via the interface which&lt;br&gt;were discarded because of an unknown or unsupported&lt;br&gt;protocol.  For any interface which does not support&lt;br&gt;protocol multiplexing, this counter will always be 0.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutOctets</objectName>
                <objectId>16</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of octets transmitted out of the&lt;br&gt;interface, including framing characters.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutUcastPkts</objectName>
                <objectId>17</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were not&lt;br&gt;addressed to a multicast or broadcast address at this&lt;br&gt;sub-layer, including those that were discarded or not&lt;br&gt;sent.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutNUcastPkts</objectName>
                <objectId>18</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were&lt;br&gt;addressed to a multicast or broadcast address at this&lt;br&gt;sub-layer, including those that were discarded or not&lt;br&gt;sent.&lt;br&gt;&lt;br&gt;This object is deprecated in favour of&lt;br&gt;ifOutMulticastPkts and ifOutBroadcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutDiscards</objectName>
                <objectId>19</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of outbound packets which were chosen to&lt;br&gt;be discarded even though no errors had been detected&lt;br&gt;to prevent their being transmitted.  One possible&lt;br&gt;reason for discarding such a packet could be to free&lt;br&gt;up buffer space.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutErrors</objectName>
                <objectId>20</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>For packet-oriented interfaces, the number of&lt;br&gt;outbound packets that could not be transmitted because&lt;br&gt;of errors.  For character-oriented or fixed-length&lt;br&gt;interfaces, the number of outbound transmission units&lt;br&gt;that could not be transmitted because of errors.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutQLen</objectName>
                <objectId>21</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>Gauge32</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The length of the output packet queue (in packets).</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifSpecific</objectName>
                <objectId>22</objectId>
                <parent>ifEntry</parent>
                <syntax>
                    <type>OBJECT IDENTIFIER</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>A reference to MIB definitions specific to the&lt;br&gt;particular media being used to realize the interface.&lt;br&gt;It is recommended that this value point to an instance&lt;br&gt;of a MIB object in the media-specific MIB, i.e., that&lt;br&gt;this object have the semantics associated with the&lt;br&gt;InstancePointer textual convention defined in RFC&lt;br&gt;1903.  In fact, it is recommended that the media-&lt;br&gt;specific MIB specify what value ifSpecific should/can&lt;br&gt;take for values of ifType.  If no MIB definitions&lt;br&gt;specific to the particular media are available, the&lt;br&gt;value should be set to the OBJECT IDENTIFIER { 0 0 }.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifXTable</objectName>
                <objectId>1</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <sequence>IfXEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>A list of interface entries.  The number of entries&lt;br&gt;is given by the value of ifNumber.  This table&lt;br&gt;contains additional objects for the interface table.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifXEntry</objectName>
                <objectId>1</objectId>
                <parent>ifXTable</parent>
                <syntax>
                    <type>IfXEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>An entry containing additional management information&lt;br&gt;applicable to a particular interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifName</objectName>
                <objectId>1</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>DisplayString</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The textual name of the interface.  The value of this&lt;br&gt;object should be the name of the interface as assigned&lt;br&gt;by the local device and should be suitable for use in&lt;br&gt;commands entered at the device's `console'.  This&lt;br&gt;might be a text name, such as `le0' or a simple port&lt;br&gt;number, such as `1', depending on the interface naming&lt;br&gt;syntax of the device.  If several entries in the&lt;br&gt;ifTable together represent a single interface as named&lt;br&gt;by the device, then each will have the same value of&lt;br&gt;ifName.  Note that for an agent which responds to SNMP&lt;br&gt;queries concerning an interface on some other&lt;br&gt;(proxied) device, then the value of ifName for such an&lt;br&gt;interface is the proxied device's local name for it.&lt;br&gt;&lt;br&gt;If there is no local name, or this object is otherwise&lt;br&gt;not applicable, then this object contains a zero-&lt;br&gt;length string.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInMulticastPkts</objectName>
                <objectId>2</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were addressed to a&lt;br&gt;multicast address at this sub-layer.  For a MAC layer&lt;br&gt;protocol, this includes both Group and Functional&lt;br&gt;addresses.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifInBroadcastPkts</objectName>
                <objectId>3</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were addressed to a&lt;br&gt;broadcast address at this sub-layer.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutMulticastPkts</objectName>
                <objectId>4</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were&lt;br&gt;addressed to a multicast address at this sub-layer,&lt;br&gt;including those that were discarded or not sent.  For&lt;br&gt;a MAC layer protocol, this includes both Group and&lt;br&gt;Functional addresses.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifOutBroadcastPkts</objectName>
                <objectId>5</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were&lt;br&gt;addressed to a broadcast address at this sub-layer,&lt;br&gt;including those that were discarded or not sent.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCInOctets</objectName>
                <objectId>6</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of octets received on the interface,&lt;br&gt;including framing characters.  This object is a 64-bit&lt;br&gt;version of ifInOctets.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCInUcastPkts</objectName>
                <objectId>7</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were not addressed to a&lt;br&gt;multicast or broadcast address at this sub-layer.&lt;br&gt;This object is a 64-bit version of ifInUcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCInMulticastPkts</objectName>
                <objectId>8</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were addressed to a&lt;br&gt;multicast address at this sub-layer.  For a MAC layer&lt;br&gt;protocol, this includes both Group and Functional&lt;br&gt;addresses.  This object is a 64-bit version of&lt;br&gt;ifInMulticastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCInBroadcastPkts</objectName>
                <objectId>9</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The number of packets, delivered by this sub-layer to&lt;br&gt;a higher (sub-)layer, which were addressed to a&lt;br&gt;broadcast address at this sub-layer.  This object is a&lt;br&gt;64-bit version of ifInBroadcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCOutOctets</objectName>
                <objectId>10</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of octets transmitted out of the&lt;br&gt;interface, including framing characters.  This object&lt;br&gt;is a 64-bit version of ifOutOctets.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCOutUcastPkts</objectName>
                <objectId>11</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were not&lt;br&gt;addressed to a multicast or broadcast address at this&lt;br&gt;sub-layer, including those that were discarded or not&lt;br&gt;sent.  This object is a 64-bit version of&lt;br&gt;ifOutUcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCOutMulticastPkts</objectName>
                <objectId>12</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were&lt;br&gt;addressed to a multicast address at this sub-layer,&lt;br&gt;including those that were discarded or not sent.  For&lt;br&gt;a MAC layer protocol, this includes both Group and&lt;br&gt;Functional addresses.  This object is a 64-bit version&lt;br&gt;of ifOutMulticastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHCOutBroadcastPkts</objectName>
                <objectId>13</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Counter64</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The total number of packets that higher-level&lt;br&gt;protocols requested be transmitted, and which were&lt;br&gt;addressed to a broadcast address at this sub-layer,&lt;br&gt;including those that were discarded or not sent.  This&lt;br&gt;object is a 64-bit version of ifOutBroadcastPkts.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifLinkUpDownTrapEnable</objectName>
                <objectId>14</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>enabled</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>disabled</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                </syntax>
                <access>read-write</access>
                <status>current</status>
                <description>Indicates whether linkUp/linkDown traps should be&lt;br&gt;generated for this interface.&lt;br&gt;&lt;br&gt;By default, this object should have the value&lt;br&gt;enabled(1) for interfaces which do not operate on&lt;br&gt;'top' of any other interface (as defined in the&lt;br&gt;ifStackTable), and disabled(2) otherwise.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifHighSpeed</objectName>
                <objectId>15</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>Gauge32</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>An estimate of the interface's current bandwidth in&lt;br&gt;units of 1,000,000 bits per second.  If this object&lt;br&gt;reports a value of `n' then the speed of the interface&lt;br&gt;is somewhere in the range of `n-500,000' to&lt;br&gt;`n+499,999'.  For interfaces which do not vary in&lt;br&gt;bandwidth or for those where no accurate estimation&lt;br&gt;can be made, this object should contain the nominal&lt;br&gt;bandwidth.  For a sub-layer which has no concept of&lt;br&gt;bandwidth, this object should be zero.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifPromiscuousMode</objectName>
                <objectId>16</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>TruthValue</type>
                </syntax>
                <access>read-write</access>
                <status>current</status>
                <description>This object has a value of false(2) if this interface&lt;br&gt;only accepts packets/frames that are addressed to this&lt;br&gt;station.  This object has a value of true(1) when the&lt;br&gt;station accepts all packets/frames transmitted on the&lt;br&gt;media.  The value true(1) is only legal on certain&lt;br&gt;types of media.  If legal, setting this object to a&lt;br&gt;value of true(1) may require the interface to be reset&lt;br&gt;before becoming effective.&lt;br&gt;&lt;br&gt;The value of ifPromiscuousMode does not affect the&lt;br&gt;reception of broadcast and multicast packets/frames by&lt;br&gt;the interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifConnectorPresent</objectName>
                <objectId>17</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>TruthValue</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>This object has the value 'true(1)' if the interface&lt;br&gt;sublayer has a physical connector and the value&lt;br&gt;'false(2)' otherwise.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifAlias</objectName>
                <objectId>18</objectId>
                <parent>ifXEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE(0..64))</type>
                </syntax>
                <access>read-write</access>
                <status>current</status>
                <description>This object is an 'alias' name for the interface as&lt;br&gt;specified by a network manager, and provides a non-&lt;br&gt;volatile 'handle' for the interface.&lt;br&gt;&lt;br&gt;On the first instantiation of an interface, the value&lt;br&gt;of ifAlias associated with that interface is the&lt;br&gt;zero-length string.  As and when a value is written&lt;br&gt;into an instance of ifAlias through a network&lt;br&gt;management set operation, then the agent must retain&lt;br&gt;the supplied value in the ifAlias instance associated&lt;br&gt;with the same interface for as long as that interface&lt;br&gt;remains instantiated, including across all re-&lt;br&gt;initializations/reboots of the network management&lt;br&gt;system, including those which result in a change of&lt;br&gt;&lt;br&gt;the interface's ifIndex value.&lt;br&gt;&lt;br&gt;An example of the value which a network manager might&lt;br&gt;store in this object for a WAN interface is the&lt;br&gt;(Telco's) circuit number/identifier of the interface.&lt;br&gt;&lt;br&gt;Some agents may support write-access only for&lt;br&gt;interfaces having particular values of ifType.  An&lt;br&gt;agent which supports write access to this object is&lt;br&gt;required to keep the value in non-volatile storage,&lt;br&gt;but it may limit the length of new values depending on&lt;br&gt;how much storage is already occupied by the current&lt;br&gt;values for other interfaces.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackTable</objectName>
                <objectId>2</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <sequence>IfStackEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>The table containing information on the relationships&lt;br&gt;between the multiple sub-layers of network interfaces.&lt;br&gt;In particular, it contains information on which sub-&lt;br&gt;layers run 'on top of' which other sub-layers, where&lt;br&gt;each sub-layer corresponds to a conceptual row in the&lt;br&gt;ifTable.  For example, when the sub-layer with ifIndex&lt;br&gt;value x runs over the sub-layer with ifIndex value y,&lt;br&gt;then this table contains:&lt;br&gt;&lt;br&gt;ifStackStatus.x.y=active&lt;br&gt;&lt;br&gt;For each ifIndex value, I, which identifies an active&lt;br&gt;interface, there are always at least two instantiated&lt;br&gt;rows in this table associated with I.  For one of&lt;br&gt;these rows, I is the value of ifStackHigherLayer; for&lt;br&gt;the other, I is the value of ifStackLowerLayer.&lt;br&gt;&lt;br&gt;For example, two rows exist even for an interface&lt;br&gt;which has no others stacked on top or below it:&lt;br&gt;&lt;br&gt;ifStackStatus.0.x=active&lt;br&gt;ifStackStatus.x.0=active</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackEntry</objectName>
                <objectId>1</objectId>
                <parent>ifStackTable</parent>
                <syntax>
                    <type>IfStackEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>Information on a particular relationship between two&lt;br&gt;sub-layers, specifying that one sub-layer runs on&lt;br&gt;'top' of the other sub-layer.  Each sub-layer&lt;br&gt;corresponds to a conceptual row in the ifTable.</description>
                <indices>
                    <index>ifStackHigherLayer</index>
                    <index>ifStackLowerLayer</index>
                </indices>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackHigherLayer</objectName>
                <objectId>1</objectId>
                <parent>ifStackEntry</parent>
                <syntax>
                    <type>Integer32</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>The value of ifIndex corresponding to the higher&lt;br&gt;sub-layer of the relationship, i.e., the sub-layer&lt;br&gt;which runs on 'top' of the sub-layer identified by the&lt;br&gt;corresponding instance of ifStackLowerLayer.  If there&lt;br&gt;is no higher sub-layer (below the internetwork layer),&lt;br&gt;then this object has the value 0.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackLowerLayer</objectName>
                <objectId>2</objectId>
                <parent>ifStackEntry</parent>
                <syntax>
                    <type>Integer32</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>The value of ifIndex corresponding to the lower sub-&lt;br&gt;layer of the relationship, i.e., the sub-layer which&lt;br&gt;runs 'below' the sub-layer identified by the&lt;br&gt;corresponding instance of ifStackHigherLayer.  If&lt;br&gt;there is no lower sub-layer, then this object has the&lt;br&gt;value 0.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackStatus</objectName>
                <objectId>3</objectId>
                <parent>ifStackEntry</parent>
                <syntax>
                    <type>RowStatus</type>
                </syntax>
                <access>read-create</access>
                <status>current</status>
                <description>The status of the relationship between two sub-&lt;br&gt;&lt;br&gt;layers.&lt;br&gt;&lt;br&gt;Changing the value of this object from 'active' to&lt;br&gt;'notInService' or 'destroy' will likely have&lt;br&gt;consequences up and down the interface stack.  Thus,&lt;br&gt;write access to this object is likely to be&lt;br&gt;inappropriate for some types of interfaces, and many&lt;br&gt;implementations will choose not to support write-&lt;br&gt;access for any type of interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifStackLastChange</objectName>
                <objectId>6</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <type>TimeTicks</type>
                </syntax>
                <access>read-only</access>
                <status>current</status>
                <description>The value of sysUpTime at the time of the last change&lt;br&gt;of the (whole) interface stack.  A change of the&lt;br&gt;interface stack is defined to be any creation,&lt;br&gt;deletion, or change in value of any instance of&lt;br&gt;ifStackStatus.  If the interface stack has been&lt;br&gt;unchanged since the last re-initialization of the&lt;br&gt;local network management subsystem, then this object&lt;br&gt;contains a zero value.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifRcvAddressTable</objectName>
                <objectId>4</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <sequence>IfRcvAddressEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>This table contains an entry for each address&lt;br&gt;(broadcast, multicast, or uni-cast) for which the&lt;br&gt;system will receive packets/frames on a particular&lt;br&gt;interface, except as follows:&lt;br&gt;&lt;br&gt;- for an interface operating in promiscuous mode,&lt;br&gt;entries are only required for those addresses for&lt;br&gt;which the system would receive frames were it not&lt;br&gt;operating in promiscuous mode.&lt;br&gt;&lt;br&gt;- for 802.5 functional addresses, only one entry is&lt;br&gt;required, for the address which has the functional&lt;br&gt;address bit ANDed with the bit mask of all functional&lt;br&gt;addresses for which the interface will accept frames.&lt;br&gt;&lt;br&gt;A system is normally able to use any unicast address&lt;br&gt;which corresponds to an entry in this table as a&lt;br&gt;source address.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifRcvAddressEntry</objectName>
                <objectId>1</objectId>
                <parent>ifRcvAddressTable</parent>
                <syntax>
                    <type>IfRcvAddressEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>A list of objects identifying an address for which&lt;br&gt;the system will accept packets/frames on the&lt;br&gt;particular interface identified by the index value&lt;br&gt;ifIndex.</description>
                <indices>
                    <index>ifIndex</index>
                    <index>ifRcvAddressAddress</index>
                </indices>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifRcvAddressAddress</objectName>
                <objectId>1</objectId>
                <parent>ifRcvAddressEntry</parent>
                <syntax>
                    <type>PhysAddress</type>
                </syntax>
                <access>not-accessible</access>
                <status>current</status>
                <description>An address for which the system will accept&lt;br&gt;packets/frames on this entry's interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifRcvAddressStatus</objectName>
                <objectId>2</objectId>
                <parent>ifRcvAddressEntry</parent>
                <syntax>
                    <type>RowStatus</type>
                </syntax>
                <access>read-create</access>
                <status>current</status>
                <description>This object is used to create and delete rows in the&lt;br&gt;ifRcvAddressTable.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifRcvAddressType</objectName>
                <objectId>3</objectId>
                <parent>ifRcvAddressEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>other</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>volatile</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>nonVolatile</pairName>
                            <pairValue>3</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                    <default>volatile</default>
                </syntax>
                <access>read-create</access>
                <status>current</status>
                <description>This object has the value nonVolatile(3) for those&lt;br&gt;entries in the table which are valid and will not be&lt;br&gt;deleted by the next restart of the managed system.&lt;br&gt;Entries having the value volatile(2) are valid and&lt;br&gt;exist, but have not been saved, so that will not exist&lt;br&gt;after the next restart of the managed system.  Entries&lt;br&gt;having the value other(1) are valid and exist but are&lt;br&gt;not classified as to whether they will continue to&lt;br&gt;exist after the next restart.</description>
            </objectType>
        </object>
        <object>
            <notification>
                <objectName>linkDown</objectName>
                <objectId>3</objectId>
                <parent>snmpTraps</parent>
                <status>current</status>
                <description>A linkDown trap signifies that the SNMPv2 entity,&lt;br&gt;acting in an agent role, has detected that the&lt;br&gt;ifOperStatus object for one of its communication links&lt;br&gt;is about to enter the down state from some other state&lt;br&gt;(but not from the notPresent state).  This other state&lt;br&gt;is indicated by the included value of ifOperStatus.</description>
            </notification>
        </object>
        <object>
            <notification>
                <objectName>linkUp</objectName>
                <objectId>4</objectId>
                <parent>snmpTraps</parent>
                <status>current</status>
                <description>A linkDown trap signifies that the SNMPv2 entity,&lt;br&gt;acting in an agent role, has detected that the&lt;br&gt;ifOperStatus object for one of its communication links&lt;br&gt;left the down state and transitioned into some other&lt;br&gt;state (but not into the notPresent state).  This other&lt;br&gt;state is indicated by the included value of&lt;br&gt;ifOperStatus.</description>
            </notification>
        </object>
        <object>
            <objectIdentifier>
                <objectName>ifConformance</objectName>
                <objectId>2</objectId>
                <parent>ifMIB</parent>
            </objectIdentifier>
        </object>
        <object>
            <objectIdentifier>
                <objectName>ifGroups</objectName>
                <objectId>1</objectId>
                <parent>ifConformance</parent>
            </objectIdentifier>
        </object>
        <object>
            <objectIdentifier>
                <objectName>ifCompliances</objectName>
                <objectId>2</objectId>
                <parent>ifConformance</parent>
            </objectIdentifier>
        </object>
        <object>
            <moduleCompliance>
                <objectName>ifCompliance2</objectName>
                <objectId>2</objectId>
                <parent>ifCompliances</parent>
                <status>current</status>
                <description>The compliance statement for SNMPv2 entities which&lt;br&gt;have network interfaces.This group is mandatory for all network interfaces&lt;br&gt;which are character-oriented or transmit data in&lt;br&gt;fixed-length transmission units.This group is mandatory only for those network&lt;br&gt;interfaces which are character-oriented or transmit&lt;br&gt;data in fixed-length transmission units, and for which&lt;br&gt;the value of the corresponding instance of ifSpeed is&lt;br&gt;greater than 20,000,000 bits/second.This group is mandatory for all network interfaces&lt;br&gt;which are packet-oriented.This group is mandatory only for those network&lt;br&gt;interfaces which are packet-oriented and for which the&lt;br&gt;value of the corresponding instance of ifSpeed is&lt;br&gt;greater than 650,000,000 bits/second.The applicability of this group MUST be defined by&lt;br&gt;the media-specific MIBs.  Media-specific MIBs must&lt;br&gt;define the exact meaning, use, and semantics of the&lt;br&gt;addresses in this group.Write access is not required.Write access is not required.Write access is not required, and only one of the six&lt;br&gt;enumerated values for the RowStatus textual convention&lt;br&gt;need be supported, specifically: active(1).Write access is not required, nor is support for the&lt;br&gt;value testing(3).Write access is not required.</description>
            </moduleCompliance>
        </object>
        <object>
            <objectGroup>
                <objectName>ifGeneralInformationGroup</objectName>
                <objectId>10</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifIndex</member>
                    <member>ifDescr</member>
                    <member>ifType</member>
                    <member>ifSpeed</member>
                    <member>ifPhysAddress</member>
                    <member>ifAdminStatus</member>
                    <member>ifOperStatus</member>
                    <member>ifLastChange</member>
                    <member>ifLinkUpDownTrapEnable</member>
                    <member>ifConnectorPresent</member>
                    <member>ifHighSpeed</member>
                    <member>ifName</member>
                    <member>ifNumber</member>
                    <member>ifAlias</member>
                    <member>ifTableLastChange</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;applicable to all network interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifFixedLengthGroup</objectName>
                <objectId>2</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifInOctets</member>
                    <member>ifOutOctets</member>
                    <member>ifInUnknownProtos</member>
                    <member>ifInErrors</member>
                    <member>ifOutErrors</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;specific to non-high speed (non-high speed interfaces&lt;br&gt;transmit and receive at speeds less than or equal to&lt;br&gt;20,000,000 bits/second) character-oriented or fixed-&lt;br&gt;length-transmission network interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifHCFixedLengthGroup</objectName>
                <objectId>3</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifHCInOctets</member>
                    <member>ifHCOutOctets</member>
                    <member>ifInOctets</member>
                    <member>ifOutOctets</member>
                    <member>ifInUnknownProtos</member>
                    <member>ifInErrors</member>
                    <member>ifOutErrors</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;specific to high speed (greater than 20,000,000&lt;br&gt;bits/second) character-oriented or fixed-length-&lt;br&gt;transmission network interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifPacketGroup</objectName>
                <objectId>4</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifInOctets</member>
                    <member>ifOutOctets</member>
                    <member>ifInUnknownProtos</member>
                    <member>ifInErrors</member>
                    <member>ifOutErrors</member>
                    <member>ifMtu</member>
                    <member>ifInUcastPkts</member>
                    <member>ifInMulticastPkts</member>
                    <member>ifInBroadcastPkts</member>
                    <member>ifInDiscards</member>
                    <member>ifOutUcastPkts</member>
                    <member>ifOutMulticastPkts</member>
                    <member>ifOutBroadcastPkts</member>
                    <member>ifOutDiscards</member>
                    <member>ifPromiscuousMode</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;specific to non-high speed (non-high speed interfaces&lt;br&gt;transmit and receive at speeds less than or equal to&lt;br&gt;20,000,000 bits/second) packet-oriented network&lt;br&gt;interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifHCPacketGroup</objectName>
                <objectId>5</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifHCInOctets</member>
                    <member>ifHCOutOctets</member>
                    <member>ifInOctets</member>
                    <member>ifOutOctets</member>
                    <member>ifInUnknownProtos</member>
                    <member>ifInErrors</member>
                    <member>ifOutErrors</member>
                    <member>ifMtu</member>
                    <member>ifInUcastPkts</member>
                    <member>ifInMulticastPkts</member>
                    <member>ifInBroadcastPkts</member>
                    <member>ifInDiscards</member>
                    <member>ifOutUcastPkts</member>
                    <member>ifOutMulticastPkts</member>
                    <member>ifOutBroadcastPkts</member>
                    <member>ifOutDiscards</member>
                    <member>ifPromiscuousMode</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;specific to high speed (greater than 20,000,000&lt;br&gt;bits/second but less than or equal to 650,000,000&lt;br&gt;bits/second) packet-oriented network interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifVHCPacketGroup</objectName>
                <objectId>6</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifHCInUcastPkts</member>
                    <member>ifHCInMulticastPkts</member>
                    <member>ifHCInBroadcastPkts</member>
                    <member>ifHCOutUcastPkts</member>
                    <member>ifHCOutMulticastPkts</member>
                    <member>ifHCOutBroadcastPkts</member>
                    <member>ifHCInOctets</member>
                    <member>ifHCOutOctets</member>
                    <member>ifInOctets</member>
                    <member>ifOutOctets</member>
                    <member>ifInUnknownProtos</member>
                    <member>ifInErrors</member>
                    <member>ifOutErrors</member>
                    <member>ifMtu</member>
                    <member>ifInUcastPkts</member>
                    <member>ifInMulticastPkts</member>
                    <member>ifInBroadcastPkts</member>
                    <member>ifInDiscards</member>
                    <member>ifOutUcastPkts</member>
                    <member>ifOutMulticastPkts</member>
                    <member>ifOutBroadcastPkts</member>
                    <member>ifOutDiscards</member>
                    <member>ifPromiscuousMode</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information&lt;br&gt;specific to higher speed (greater than 650,000,000&lt;br&gt;bits/second) packet-oriented network interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifRcvAddressGroup</objectName>
                <objectId>7</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifRcvAddressStatus</member>
                    <member>ifRcvAddressType</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information on the&lt;br&gt;multiple addresses which an interface receives.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifStackGroup2</objectName>
                <objectId>11</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifStackStatus</member>
                    <member>ifStackLastChange</member>
                </members>
                <status>current</status>
                <description>A collection of objects providing information on the&lt;br&gt;layering of MIB-II interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectType>
                <objectName>ifTestTable</objectName>
                <objectId>3</objectId>
                <parent>ifMIBObjects</parent>
                <syntax>
                    <sequence>IfTestEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>deprecated</status>
                <description>This table contains one entry per interface.  It&lt;br&gt;defines objects which allow a network manager to&lt;br&gt;instruct an agent to test an interface for various&lt;br&gt;faults.  Tests for an interface are defined in the&lt;br&gt;media-specific MIB for that interface.  After invoking&lt;br&gt;a test, the object ifTestResult can be read to&lt;br&gt;determine the outcome.  If an agent can not perform&lt;br&gt;the test, ifTestResult is set to so indicate.  The&lt;br&gt;object ifTestCode can be used to provide further&lt;br&gt;test-specific or interface-specific (or even&lt;br&gt;enterprise-specific) information concerning the&lt;br&gt;outcome of the test.  Only one test can be in progress&lt;br&gt;on each interface at any one time.  If one test is in&lt;br&gt;progress when another test is invoked, the second test&lt;br&gt;is rejected.  Some agents may reject a test when a&lt;br&gt;prior test is active on another interface.&lt;br&gt;&lt;br&gt;Before starting a test, a manager-station must first&lt;br&gt;obtain 'ownership' of the entry in the ifTestTable for&lt;br&gt;the interface to be tested.  This is accomplished with&lt;br&gt;the ifTestId and ifTestStatus objects as follows:&lt;br&gt;&lt;br&gt;try_again:&lt;br&gt;get (ifTestId, ifTestStatus)&lt;br&gt;while (ifTestStatus != notInUse)&lt;br&gt;/*&lt;br&gt;* Loop while a test is running or some other&lt;br&gt;* manager is configuring a test.&lt;br&gt;*/&lt;br&gt;short delay&lt;br&gt;get (ifTestId, ifTestStatus)&lt;br&gt;}&lt;br&gt;&lt;br&gt;/*&lt;br&gt;* Is not being used right now -- let's compete&lt;br&gt;* to see who gets it.&lt;br&gt;*/&lt;br&gt;lock_value = ifTestId&lt;br&gt;&lt;br&gt;if ( set(ifTestId = lock_value, ifTestStatus = inUse,&lt;br&gt;ifTestOwner = 'my-IP-address') == FAILURE)&lt;br&gt;/*&lt;br&gt;* Another manager got the ifTestEntry -- go&lt;br&gt;* try again&lt;br&gt;*/&lt;br&gt;goto try_again;&lt;br&gt;&lt;br&gt;/*&lt;br&gt;* I have the lock&lt;br&gt;*/&lt;br&gt;set up any test parameters.&lt;br&gt;&lt;br&gt;/*&lt;br&gt;* This starts the test&lt;br&gt;*/&lt;br&gt;set(ifTestType = test_to_run);&lt;br&gt;&lt;br&gt;wait for test completion by polling ifTestResult&lt;br&gt;&lt;br&gt;when test completes, agent sets ifTestResult&lt;br&gt;agent also sets ifTestStatus = 'notInUse'&lt;br&gt;&lt;br&gt;retrieve any additional test results, and ifTestId&lt;br&gt;&lt;br&gt;if (ifTestId == lock_value+1) results are valid&lt;br&gt;&lt;br&gt;A manager station first retrieves the value of the&lt;br&gt;appropriate ifTestId and ifTestStatus objects,&lt;br&gt;periodically repeating the retrieval if necessary,&lt;br&gt;until the value of ifTestStatus is 'notInUse'.  The&lt;br&gt;manager station then tries to set the same ifTestId&lt;br&gt;object to the value it just retrieved, the same&lt;br&gt;ifTestStatus object to 'inUse', and the corresponding&lt;br&gt;&lt;br&gt;ifTestOwner object to a value indicating itself.  If&lt;br&gt;the set operation succeeds then the manager has&lt;br&gt;obtained ownership of the ifTestEntry, and the value of&lt;br&gt;the ifTestId object is incremented by the agent (per&lt;br&gt;the semantics of TestAndIncr).  Failure of the set&lt;br&gt;operation indicates that some other manager has&lt;br&gt;obtained ownership of the ifTestEntry.&lt;br&gt;&lt;br&gt;Once ownership is obtained, any test parameters can be&lt;br&gt;setup, and then the test is initiated by setting&lt;br&gt;ifTestType.  On completion of the test, the agent sets&lt;br&gt;ifTestStatus to 'notInUse'.  Once this occurs, the&lt;br&gt;manager can retrieve the results.  In the (rare) event&lt;br&gt;that the invocation of tests by two network managers&lt;br&gt;were to overlap, then there would be a possibility that&lt;br&gt;the first test's results might be overwritten by the&lt;br&gt;second test's results prior to the first results being&lt;br&gt;read.  This unlikely circumstance can be detected by a&lt;br&gt;network manager retrieving ifTestId at the same time as&lt;br&gt;retrieving the test results, and ensuring that the&lt;br&gt;results are for the desired request.&lt;br&gt;&lt;br&gt;If ifTestType is not set within an abnormally long&lt;br&gt;period of time after ownership is obtained, the agent&lt;br&gt;should time-out the manager, and reset the value of the&lt;br&gt;ifTestStatus object back to 'notInUse'.  It is&lt;br&gt;suggested that this time-out period be 5 minutes.&lt;br&gt;&lt;br&gt;In general, a management station must not retransmit a&lt;br&gt;request to invoke a test for which it does not receive&lt;br&gt;a response; instead, it properly inspects an agent's&lt;br&gt;MIB to determine if the invocation was successful.&lt;br&gt;Only if the invocation was unsuccessful, is the&lt;br&gt;invocation request retransmitted.&lt;br&gt;&lt;br&gt;Some tests may require the interface to be taken off-&lt;br&gt;line in order to execute them, or may even require the&lt;br&gt;agent to reboot after completion of the test.  In these&lt;br&gt;circumstances, communication with the management&lt;br&gt;station invoking the test may be lost until after&lt;br&gt;completion of the test.  An agent is not required to&lt;br&gt;support such tests.  However, if such tests are&lt;br&gt;supported, then the agent should make every effort to&lt;br&gt;transmit a response to the request which invoked the&lt;br&gt;test prior to losing communication.  When the agent is&lt;br&gt;restored to normal service, the results of the test are&lt;br&gt;properly made available in the appropriate objects.&lt;br&gt;Note that this requires that the ifIndex value assigned&lt;br&gt;to an interface must be unchanged even if the test&lt;br&gt;causes a reboot.  An agent must reject any test for&lt;br&gt;which it cannot, perhaps due to resource constraints,&lt;br&gt;make available at least the minimum amount of&lt;br&gt;information after that test completes.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestEntry</objectName>
                <objectId>1</objectId>
                <parent>ifTestTable</parent>
                <syntax>
                    <type>IfTestEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>deprecated</status>
                <description>An entry containing objects for invoking tests on an&lt;br&gt;interface.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestId</objectName>
                <objectId>1</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>TestAndIncr</type>
                </syntax>
                <access>read-write</access>
                <status>deprecated</status>
                <description>This object identifies the current invocation of the&lt;br&gt;interface's test.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestStatus</objectName>
                <objectId>2</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>notInUse</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>inUse</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                </syntax>
                <access>read-write</access>
                <status>deprecated</status>
                <description>This object indicates whether or not some manager&lt;br&gt;currently has the necessary 'ownership' required to&lt;br&gt;invoke a test on this interface.  A write to this&lt;br&gt;object is only successful when it changes its value&lt;br&gt;from 'notInUse(1)' to 'inUse(2)'.  After completion of&lt;br&gt;a test, the agent resets the value back to&lt;br&gt;'notInUse(1)'.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestType</objectName>
                <objectId>3</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>AutonomousType</type>
                </syntax>
                <access>read-write</access>
                <status>deprecated</status>
                <description>A control variable used to start and stop operator-&lt;br&gt;initiated interface tests.  Most OBJECT IDENTIFIER&lt;br&gt;values assigned to tests are defined elsewhere, in&lt;br&gt;association with specific types of interface.&lt;br&gt;However, this document assigns a value for a full-&lt;br&gt;duplex loopback test, and defines the special meanings&lt;br&gt;of the subject identifier:&lt;br&gt;&lt;br&gt;noTest  OBJECT IDENTIFIER ::= { 0 0 }&lt;br&gt;&lt;br&gt;When the value noTest is written to this object, no&lt;br&gt;action is taken unless a test is in progress, in which&lt;br&gt;case the test is aborted.  Writing any other value to&lt;br&gt;this object is only valid when no test is currently in&lt;br&gt;progress, in which case the indicated test is&lt;br&gt;initiated.&lt;br&gt;&lt;br&gt;When read, this object always returns the most recent&lt;br&gt;value that ifTestType was set to.  If it has not been&lt;br&gt;set since the last initialization of the network&lt;br&gt;management subsystem on the agent, a value of noTest&lt;br&gt;is returned.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestResult</objectName>
                <objectId>4</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                    <nameValuePairs>
                        <nameValuePair>
                            <pairName>none</pairName>
                            <pairValue>1</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>success</pairName>
                            <pairValue>2</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>inProgress</pairName>
                            <pairValue>3</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>notSupported</pairName>
                            <pairValue>4</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>unAbleToRun</pairName>
                            <pairValue>5</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>aborted</pairName>
                            <pairValue>6</pairValue>
                        </nameValuePair>
                        <nameValuePair>
                            <pairName>failed</pairName>
                            <pairValue>7</pairValue>
                        </nameValuePair>
                    </nameValuePairs>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>This object contains the result of the most recently&lt;br&gt;requested test, or the value none(1) if no tests have&lt;br&gt;been requested since the last reset.  Note that this&lt;br&gt;facility provides no provision for saving the results&lt;br&gt;of one test when starting another, as could be&lt;br&gt;required if used by multiple managers concurrently.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestCode</objectName>
                <objectId>5</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>OBJECT IDENTIFIER</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>This object contains a code which contains more&lt;br&gt;specific information on the test result, for example&lt;br&gt;an error-code after a failed test.  Error codes and&lt;br&gt;other values this object may take are specific to the&lt;br&gt;type of interface and/or test.  The value may have the&lt;br&gt;semantics of either the AutonomousType or&lt;br&gt;InstancePointer textual conventions as defined in RFC&lt;br&gt;1903.  The identifier:&lt;br&gt;&lt;br&gt;testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }&lt;br&gt;&lt;br&gt;is defined for use if no additional result code is&lt;br&gt;available.</description>
            </objectType>
        </object>
        <object>
            <objectType>
                <objectName>ifTestOwner</objectName>
                <objectId>6</objectId>
                <parent>ifTestEntry</parent>
                <syntax>
                    <type>OwnerString</type>
                </syntax>
                <access>read-write</access>
                <status>deprecated</status>
                <description>The entity which currently has the 'ownership'&lt;br&gt;required to invoke a test on this interface.</description>
            </objectType>
        </object>
        <object>
            <objectGroup>
                <objectName>ifGeneralGroup</objectName>
                <objectId>1</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifDescr</member>
                    <member>ifType</member>
                    <member>ifSpeed</member>
                    <member>ifPhysAddress</member>
                    <member>ifAdminStatus</member>
                    <member>ifOperStatus</member>
                    <member>ifLastChange</member>
                    <member>ifLinkUpDownTrapEnable</member>
                    <member>ifConnectorPresent</member>
                    <member>ifHighSpeed</member>
                    <member>ifName</member>
                </members>
                <status>deprecated</status>
                <description>A collection of objects deprecated in favour of&lt;br&gt;ifGeneralInformationGroup.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifTestGroup</objectName>
                <objectId>8</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifTestId</member>
                    <member>ifTestStatus</member>
                    <member>ifTestType</member>
                    <member>ifTestResult</member>
                    <member>ifTestCode</member>
                    <member>ifTestOwner</member>
                </members>
                <status>deprecated</status>
                <description>A collection of objects providing the ability to&lt;br&gt;invoke tests on an interface.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifStackGroup</objectName>
                <objectId>9</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifStackStatus</member>
                </members>
                <status>deprecated</status>
                <description>The previous collection of objects providing&lt;br&gt;information on the layering of MIB-II interfaces.</description>
            </objectGroup>
        </object>
        <object>
            <objectGroup>
                <objectName>ifOldObjectsGroup</objectName>
                <objectId>12</objectId>
                <parent>ifGroups</parent>
                <members>
                    <member>ifInNUcastPkts</member>
                    <member>ifOutNUcastPkts</member>
                    <member>ifOutQLen</member>
                    <member>ifSpecific</member>
                </members>
                <status>deprecated</status>
                <description>The collection of objects deprecated from the&lt;br&gt;original MIB-II interfaces group.</description>
            </objectGroup>
        </object>
        <object>
            <moduleCompliance>
                <objectName>ifCompliance</objectName>
                <objectId>1</objectId>
                <parent>ifCompliances</parent>
                <status>deprecated</status>
                <description>The previous compliance statement for SNMPv2 entities&lt;br&gt;which have network interfaces.This group is mandatory for all network interfaces&lt;br&gt;which are character-oriented or transmit data in&lt;br&gt;fixed-length transmission units.This group is mandatory only for those network&lt;br&gt;interfaces which are character-oriented or transmit&lt;br&gt;data in fixed-length transmission units, and for which&lt;br&gt;the value of the corresponding instance of ifSpeed is&lt;br&gt;greater than 20,000,000 bits/second.This group is mandatory for all network interfaces&lt;br&gt;which are packet-oriented.This group is mandatory only for those network&lt;br&gt;interfaces which are packet-oriented and for which the&lt;br&gt;value of the corresponding instance of ifSpeed is&lt;br&gt;greater than 650,000,000 bits/second.This group is optional.  Media-specific MIBs which&lt;br&gt;require interface tests are strongly encouraged to use&lt;br&gt;this group for invoking tests and reporting results.&lt;br&gt;A medium specific MIB which has mandatory tests may&lt;br&gt;make implementation of this group mandatory.The applicability of this group MUST be defined by&lt;br&gt;the media-specific MIBs.  Media-specific MIBs must&lt;br&gt;define the exact meaning, use, and semantics of the&lt;br&gt;addresses in this group.Write access is not required.Write access is not required.Write access is not required, and only one of the six&lt;br&gt;enumerated values for the RowStatus textual convention&lt;br&gt;need be supported, specifically: active(1).Write access is not required, nor is support for the&lt;br&gt;value testing(3).</description>
            </moduleCompliance>
        </object>
    </objects>
</mib>
