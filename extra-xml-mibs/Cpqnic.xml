<?xml version="1.0" encoding="UTF-8"?>
<mib definition="CPQNIC-MIB">
    <imports>
        <mibImport>
            <sourceMib>CPQHOST-MIB</sourceMib>
            <import>compaq</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC1155-SMI</sourceMib>
            <import>Counter</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC1155-SMI</sourceMib>
            <import>Gauge</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC1213-MIB</sourceMib>
            <import>DisplayString</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC-1212</sourceMib>
            <import>OBJECT-TYPE</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC-1215</sourceMib>
            <import>TRAP-TYPE</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC1213-MIB</sourceMib>
            <import>sysName</import>
        </mibImport>
        <mibImport>
            <sourceMib>RFC1213-MIB</sourceMib>
            <import>ipAdEntAddr</import>
        </mibImport>
        <mibImport>
            <sourceMib>CPQHOST-MIB</sourceMib>
            <import>cpqHoTrapFlags</import>
        </mibImport>
        <mibImport>
            <sourceMib>CPQSINFO-MIB</sourceMib>
            <import>cpqSiServerSystemId</import>
        </mibImport>
        <mibImport>
            <sourceMib>CPQSTDEQ-MIB</sourceMib>
            <import>cpqSePciSlotBoardName</import>
        </mibImport>
    </imports>
    <objects>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNic</objectName>
                <objectId>18</objectId>
                <parent>compaq</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicMibRev</objectName>
                <objectId>1</objectId>
                <parent>cpqNic</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicComponent</objectName>
                <objectId>2</objectId>
                <parent>cpqNic</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicInterface</objectName>
                <objectId>1</objectId>
                <parent>cpqNicComponent</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicIfLogMap</objectName>
                <objectId>2</objectId>
                <parent>cpqNicComponent</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicIfPhysAdapter</objectName>
                <objectId>3</objectId>
                <parent>cpqNicComponent</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectIdentifier>
                <objectName>cpqNicOsCommon</objectName>
                <objectId>4</objectId>
                <parent>cpqNicInterface</parent>
            </objectIdentifier>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicMibRevMajor</objectName>
                <objectId>1</objectId>
                <parent>cpqNicMibRev</parent>
                <syntax>
                    <type>INTEGER (1..65535)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The Major Revision level of the MIB.&lt;br&gt;&lt;br&gt;A change in the major revision level represents a major change&lt;br&gt;in the architecture of the MIB.  A change in the major revision&lt;br&gt;level may indicate a significant change in the information&lt;br&gt;supported and/or the meaning of the supported information.&lt;br&gt;Correct interpretation of data may require a MIB document with&lt;br&gt;the same major revision level.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicMibRevMinor</objectName>
                <objectId>2</objectId>
                <parent>cpqNicMibRev</parent>
                <syntax>
                    <type>INTEGER (0..65535)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The Minor Revision level of the MIB.&lt;br&gt;&lt;br&gt;A change in the minor revision level may represent some minor&lt;br&gt;additional support, no changes to any pre-existing information&lt;br&gt;has occurred.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicMibCondition</objectName>
                <objectId>3</objectId>
                <parent>cpqNicMibRev</parent>
                <syntax>
                    <type>INTEGER</type>
                    <valueList>
                        <valueItem>
                            <label>unknown</label>
                            <val>1</val>
                        </valueItem>
                        <valueItem>
                            <label>ok</label>
                            <val>2</val>
                        </valueItem>
                        <valueItem>
                            <label>degraded</label>
                            <val>3</val>
                        </valueItem>
                        <valueItem>
                            <label>failed</label>
                            <val>4</val>
                        </valueItem>
                    </valueList>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The overall condition.&lt;br&gt;&lt;br&gt;This object represents the overall status of the&lt;br&gt;system represented by this MIB.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonPollFreq</objectName>
                <objectId>1</objectId>
                <parent>cpqNicOsCommon</parent>
                <syntax>
                    <type>INTEGER (0..65535)</type>
                </syntax>
                <access>read-write</access>
                <status>mandatory</status>
                <description>The Insight Agent's polling frequency.&lt;br&gt;&lt;br&gt;The frequency, in seconds, at which the Insight Agent requests&lt;br&gt;information from the device driver.  A frequency of zero (0)&lt;br&gt;indicates that the Insight Agent retrieves the information upon&lt;br&gt;request of a management station, it does not poll the device&lt;br&gt;driver at a specific interval.&lt;br&gt;&lt;br&gt;If the poll frequency is zero (0) all attempts to write to this&lt;br&gt;object will fail.  If the poll frequency is non-zero,&lt;br&gt;setting this value will change the polling frequency of the&lt;br&gt;Insight Agent.  Setting the poll frequency to zero (0) will&lt;br&gt;always fail.  An agent may choose to fail any request to change&lt;br&gt;the poll frequency to a value that would severely impact system&lt;br&gt;performance.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleTable</objectName>
                <objectId>2</objectId>
                <parent>cpqNicOsCommon</parent>
                <syntax>
                    <sequence>CpqNicOsCommonModuleEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>deprecated</status>
                <description>A table of software modules that provide an interface to the&lt;br&gt;device this MIB describes.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleEntry</objectName>
                <objectId>1</objectId>
                <parent>cpqNicOsCommonModuleTable</parent>
                <syntax>
                    <type>CpqNicOsCommonModuleEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>deprecated</status>
                <description>A description of a software module that provides an interface&lt;br&gt;to the device this MIB describes.</description>
                <indices>
                    <index>cpqNicOsCommonModuleIndex</index>
                </indices>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleIndex</objectName>
                <objectId>1</objectId>
                <parent>cpqNicOsCommonModuleEntry</parent>
                <syntax>
                    <type>INTEGER (0..255)</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>A unique index for this module description.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleName</objectName>
                <objectId>2</objectId>
                <parent>cpqNicOsCommonModuleEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The module name.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleVersion</objectName>
                <objectId>3</objectId>
                <parent>cpqNicOsCommonModuleEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..5))</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The module version in XX.YY format.&lt;br&gt;&lt;br&gt;Where XX is the major version number and YY is the minor version&lt;br&gt;number.  This field will be null (size 0) string if the agent&lt;br&gt;cannot provide the module version.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModuleDate</objectName>
                <objectId>4</objectId>
                <parent>cpqNicOsCommonModuleEntry</parent>
                <syntax>
                    <type>OCTET STRING (SIZE (7))</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The module date.&lt;br&gt;&lt;br&gt;field  octets  contents                  range&lt;br&gt;=====  ======  =======                  =====&lt;br&gt;1      1-2   year                      0..65536&lt;br&gt;2       3    month                     1..12&lt;br&gt;3       4    day                       1..31&lt;br&gt;4       5    hour                      0..23&lt;br&gt;5       6    minute                    0..59&lt;br&gt;6       7    second                    0..60&lt;br&gt;(use 60 for leap-second)&lt;br&gt;&lt;br&gt;&lt;br&gt;This field will be set to year = 0 if the agent cannot provide&lt;br&gt;the module date.  The hour, minute, and second field will be set&lt;br&gt;to zero (0) if they are not relevant.  The year field is set&lt;br&gt;with the most significant octet first.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicOsCommonModulePurpose</objectName>
                <objectId>5</objectId>
                <parent>cpqNicOsCommonModuleEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>deprecated</status>
                <description>The purpose of the module described in this entry.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapTable</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfLogMap</parent>
                <syntax>
                    <sequence>CpqNicIfLogMapEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>mandatory</status>
                <description>A table of interface to logical hardware mappings.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapEntry</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfLogMapTable</parent>
                <syntax>
                    <type>CpqNicIfLogMapEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>mandatory</status>
                <description>A mapping of an interface table entry to logical hardware.</description>
                <indices>
                    <index>cpqNicIfLogMapIndex</index>
                </indices>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapIndex</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER (0..65535)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An index that uniquely specifies this entry.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapIfNumber</objectName>
                <objectId>2</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>OCTET STRING</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An OCTET STRING representing an array of MIB II Interface&lt;br&gt;Numbers implemented by this logical adapter. Each entry is&lt;br&gt;a 32-bit value, represented by 4 octets in LSB...MSB&lt;br&gt;(Little-Endian) order.&lt;br&gt;&lt;br&gt;There may be 0 or more Interface Numbers on a particular&lt;br&gt;logical adapter, depending on the operating system's&lt;br&gt;assignment of Interface Numbers.  There is an interface&lt;br&gt;number field in the cpqNicIfPhysAdapterTable which may&lt;br&gt;contain one or more interface numbers.  For logical&lt;br&gt;adapters with one Physical Adapter, the same Interface&lt;br&gt;Number(s) may appear in both tables.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapDescription</objectName>
                <objectId>3</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>Description of the logical adapter. This string&lt;br&gt;is NULL terminated.  This field is only populated&lt;br&gt;when the logical adapter represents a group of&lt;br&gt;physical adapters.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapGroupType</objectName>
                <objectId>4</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The type of Fault Tolerance supplied by this logical adapter.&lt;br&gt;&lt;br&gt;The following types of Fault Tolerance are supported:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;Indicates that the instrument agent does not recognize the&lt;br&gt;controller.  You may need to upgrade the instrument agent.&lt;br&gt;&lt;br&gt;none(2)&lt;br&gt;Indicates the logical adapter is not fault tolerant.&lt;br&gt;There is a single physical adapter associated with the&lt;br&gt;logical adapter.&lt;br&gt;&lt;br&gt;redundantPair(3)&lt;br&gt;Indicates that the logical adapter has two adapters associated&lt;br&gt;with it.  One adapter is active and the other adapter is a&lt;br&gt;hot standby.  No longer used.&lt;br&gt;&lt;br&gt;nft(4)&lt;br&gt;Network Fault Tolerance.  The logical adapter has two or more&lt;br&gt;adapters associated with it.  One adapter is active on the&lt;br&gt;network and the other(s) are hot standby(s).&lt;br&gt;&lt;br&gt;alb(5)&lt;br&gt;Adaptive Load Balancing. Indicates that the logical adapter has&lt;br&gt;more than one physical adapter associated with it.  One adapter&lt;br&gt;transmits and receives, while the others only transmit.  If the&lt;br&gt;receiving adapter fails, one of the other adapters assumes this&lt;br&gt;role.  No longer used.&lt;br&gt;&lt;br&gt;fec(6)&lt;br&gt;Fast EtherChannel.  This allows all physical adapters&lt;br&gt;associated with the logical adapter to both receive and&lt;br&gt;transmit.  This requires a switch that cooperates with&lt;br&gt;the adapters.  If any adapter fails, the load is spread&lt;br&gt;among the remaining adapters.  No longer used.&lt;br&gt;&lt;br&gt;gec(7)&lt;br&gt;Gigabit EtherChannel.  This allows all physical adapters&lt;br&gt;associated with the logical adapter to both receive and&lt;br&gt;transmit.  This requires a gigabit switch that cooperates&lt;br&gt;with the adapters.  If any adapter fails, the load is&lt;br&gt;spread among the remaining adapters.  No longer used.&lt;br&gt;&lt;br&gt;ad(8)&lt;br&gt;IEEE802.3ad Link Aggregation.  This allows all physical&lt;br&gt;adapters associated with the logical adapter to both receive&lt;br&gt;and transmit.  This requires a switch that cooperates with&lt;br&gt;the adapters.  If any adapter fails, the load is spread&lt;br&gt;among the remaining adapters.  No longer used.&lt;br&gt;&lt;br&gt;slb(9)&lt;br&gt;Switch-assisted load balancing.  This allows all physical&lt;br&gt;adapters associated with the logical adapter to both receive&lt;br&gt;and transmit.  This requires a switch that cooperates with&lt;br&gt;the adapters.  If any adapter fails, the load is spread&lt;br&gt;among the remaining adapters.  Aggregates fec, gec, and ad.&lt;br&gt;&lt;br&gt;tlb(10)&lt;br&gt;Transmit Load Balancing. Indicates that the logical adapter has&lt;br&gt;more than one physical adapter associated with it.  One adapter&lt;br&gt;transmits and receives, while the others only transmit.  If the&lt;br&gt;receiving adapter fails, one of the other adapters assumes this&lt;br&gt;role.  Formerly alb.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapAdapterCount</objectName>
                <objectId>5</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER (1..16)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of physical adapters associated with this logical&lt;br&gt;adapter.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapAdapterOKCount</objectName>
                <objectId>6</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER (0..16)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of physical adapters associated with this logical&lt;br&gt;adapter that have an OK condition.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapPhysicalAdapters</objectName>
                <objectId>7</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>OCTET STRING (SIZE (1..16))</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An array of octets corresponding to the indices in the&lt;br&gt;cpqNicIfPhysAdapterTable of the physical adapters&lt;br&gt;associated with this logical adapter.  The number&lt;br&gt;of octets is equal to cpqNicIfLogMapAdapterCount.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapMACAddress</objectName>
                <objectId>8</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>OCTET STRING (SIZE (6))</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The MAC (physical) address that the logical adapter&lt;br&gt;presents to the network.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapSwitchoverMode</objectName>
                <objectId>9</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The algorithm used to determine when to switch network traffic&lt;br&gt;from one adapter to another.&lt;br&gt;&lt;br&gt;The following algorithms are supported:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;Indicates that the instrument agent does not recognize the&lt;br&gt;controller.  You may need to upgrade the instrument agent.&lt;br&gt;&lt;br&gt;none(2)&lt;br&gt;Indicates the logical adapter is not fault tolerant.  There&lt;br&gt;is a single physical adapter associated with the logical adapter.&lt;br&gt;&lt;br&gt;manual(3)&lt;br&gt;Indicates that the logical adapter has more than one physical&lt;br&gt;adapter associated with it.  In order to switch from the active&lt;br&gt;adapter to a standby adapter, user action is required.&lt;br&gt;&lt;br&gt;switchOnFail(4)&lt;br&gt;Indicates that the logical adapter has more than one physical&lt;br&gt;adapter associated with it.  If a failure of the active adapter&lt;br&gt;is detected, network traffic will automatically switch to a&lt;br&gt;standby adapter.  The standby adapter will remain active until&lt;br&gt;some action (manual switch, system restart) restores the&lt;br&gt;primary adapter to active.&lt;br&gt;&lt;br&gt;preferredPrimary(5)&lt;br&gt;Indicates that the logical adapter has more than one physical&lt;br&gt;adapter associated with it.  If a failure of the active adapter&lt;br&gt;is detected, network traffic will automatically switch to a&lt;br&gt;standby adapter.  If the original primary adapter recovers from&lt;br&gt;the failure, it will automatically become active again.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapCondition</objectName>
                <objectId>10</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The condition of this interface. This value represents the&lt;br&gt;overall condition of the logical adapter group.&lt;br&gt;&lt;br&gt;This value is driven by the cpqNicIfLogMapStatus object&lt;br&gt;as follows:&lt;br&gt;&lt;br&gt;other(1)&lt;br&gt;Indicates that the value of the Logical Map Status&lt;br&gt;is unknown(1).&lt;br&gt;&lt;br&gt;ok(2)&lt;br&gt;Indicates that the value of the Logical Map Status is&lt;br&gt;ok(2).&lt;br&gt;&lt;br&gt;degraded(3)&lt;br&gt;Indicates that the value of the Logical Map Status is&lt;br&gt;either primaryFailed(3) or standbyFailed(4).&lt;br&gt;The Logical adapter still functions in this state,&lt;br&gt;but performance and redundancy are degraded.&lt;br&gt;&lt;br&gt;failed(4)&lt;br&gt;Indicates that the value of the Logical Map Status is&lt;br&gt;groupFailed(5).  This indicates that all the adapters&lt;br&gt;in the logical group have failed and no network traffic&lt;br&gt;is occurring.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapStatus</objectName>
                <objectId>11</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The status of the logical group.&lt;br&gt;&lt;br&gt;The following values are valid for the logical group status:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;The instrument agent may not support this value.  You may&lt;br&gt;need to load a new instrument agent.&lt;br&gt;&lt;br&gt;ok(2)&lt;br&gt;The adapter group is functioning properly.&lt;br&gt;&lt;br&gt;primaryFailed(3)&lt;br&gt;The adapter specified as primary in the group has failed.&lt;br&gt;the group is still functioning and one of the standby&lt;br&gt;adapters has assumed the role of primary.  Depending on&lt;br&gt;the number of adapters in the group, redundancy may be&lt;br&gt;lost.&lt;br&gt;&lt;br&gt;standbyFailed(4)&lt;br&gt;An adapter specified as standby or secondary in the&lt;br&gt;group has failed.  the group is still functioning and&lt;br&gt;one of the standby adapters has assumed the role of&lt;br&gt;primary.  Depending on the number of adapters in the&lt;br&gt;group, redundancy may be lost.&lt;br&gt;&lt;br&gt;groupFailed(5)&lt;br&gt;All adapters in the group have failed.  Network connectivity&lt;br&gt;has been lost for the group.  This status will be returned&lt;br&gt;for logical groups with a single physical adapter that&lt;br&gt;has failed.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapNumSwitchovers</objectName>
                <objectId>12</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of times a fault tolerant switchover has&lt;br&gt;occurred.  Switchovers occur because the primary adapter&lt;br&gt;fails.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapHwLocation</objectName>
                <objectId>13</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>optional</status>
                <description>A text description of the hardware location, on complex&lt;br&gt;multi SBB hardware only, for the adapters.&lt;br&gt;A NULL string indicates that the hardware location could not&lt;br&gt;be determined or is irrelevant.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapOverallCondition</objectName>
                <objectId>2</objectId>
                <parent>cpqNicIfLogMap</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The overall condition of all interfaces.  This object&lt;br&gt;is the worst case of any individual interface.  For&lt;br&gt;example, if there is one degraded interface, this variable&lt;br&gt;will have a value of degraded(3).  If there is one failed&lt;br&gt;interface, this variable will have a value of failed(4).</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfLogMapSpeed</objectName>
                <objectId>14</objectId>
                <parent>cpqNicIfLogMapEntry</parent>
                <syntax>
                    <type>Gauge</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An estimate of the interface's current bandwidth&lt;br&gt;in bits per second.  For interfaces which do not&lt;br&gt;vary in bandwidth or for those where no accurate&lt;br&gt;estimation can be made, this object should contain&lt;br&gt;the nominal bandwidth.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterTable</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfPhysAdapter</parent>
                <syntax>
                    <sequence>CpqNicIfPhysAdapterEntry</sequence>
                </syntax>
                <access>not-accessible</access>
                <status>mandatory</status>
                <description>A table of physical adapters.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterEntry</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfPhysAdapterTable</parent>
                <syntax>
                    <type>CpqNicIfPhysAdapterEntry</type>
                </syntax>
                <access>not-accessible</access>
                <status>mandatory</status>
                <description>A physical adapter table entry.</description>
                <indices>
                    <index>cpqNicIfPhysAdapterIndex</index>
                </indices>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterIndex</objectName>
                <objectId>1</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER (0..65535)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An index that uniquely specifies this entry.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterIfNumber</objectName>
                <objectId>2</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>OCTET STRING</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>An OCTET STRING representing an array of MIB II Interface&lt;br&gt;Numbers implemented by this physical adapter. Each entry is&lt;br&gt;a 32-bit value, represented by 4 octets in LSB...MSB&lt;br&gt;(Little-Endian) order.&lt;br&gt;&lt;br&gt;There may be 0 or more Interface Numbers on a particular&lt;br&gt;physical adapter, depending on the operating system's&lt;br&gt;assignment of Interface Numbers.  There is also an Interface&lt;br&gt;Number field in the cpqNicIfLogMapTable which may&lt;br&gt;contain one or more Interface Numbers.  For logical&lt;br&gt;adapters with one Physical Adapter, the same Interface&lt;br&gt;Number(s) appear in both tables.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterRole</objectName>
                <objectId>3</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The role this physical adapter has in the logical group.&lt;br&gt;&lt;br&gt;The following values are valid:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;The role of the adapter could not be determined.  This&lt;br&gt;indicates a problem with the instrument agent.  A new&lt;br&gt;agent may need to be installed.&lt;br&gt;&lt;br&gt;primary(2)&lt;br&gt;The adapter is the primary adapter in the group, or the&lt;br&gt;group consists of a single adapter.  The primary adapter&lt;br&gt;in a Single Pair or NFT group handles all the network&lt;br&gt;traffic unless it fails.  The primary adapter in an ALB&lt;br&gt;group receives all traffic.  The physical address of&lt;br&gt;this adapter is the default address of the group.  In&lt;br&gt;a FEC group, an arbitrary adapter is designated as&lt;br&gt;primary, but all adapters are equal and participate&lt;br&gt;fully on the network.&lt;br&gt;&lt;br&gt;secondary(3)&lt;br&gt;In Single Pair and NFT groups, this adapter functions as a&lt;br&gt;hot standby.  No network traffic is handled by this adapter&lt;br&gt;other than periodic test packets.&lt;br&gt;In an ALB group, this adapter is in a secondary role and&lt;br&gt;transmits packets to increase bandwidth.&lt;br&gt;In an FEC group, this adapter participates fully in network&lt;br&gt;traffic.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterMACAddress</objectName>
                <objectId>4</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>OCTET STRING (SIZE (6))</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The physical (MAC) address of the adapter.  In&lt;br&gt;some configurations this may be a null length&lt;br&gt;octet string.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterSlot</objectName>
                <objectId>5</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of the slot containing the physical hardware&lt;br&gt;that implements this interface.  The number zero (0)&lt;br&gt;indicates an embedded interface (on the system board).&lt;br&gt;A value of -1 indicates an interface whose slot is unknown.&lt;br&gt;Values may be unknown if the physical hardware has not&lt;br&gt;been configured using the System Configuration Utility.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterIoAddr</objectName>
                <objectId>6</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The base I/O address of the physical adapter.  The number&lt;br&gt;zero (0) indicates that the device does not use I/O mapped&lt;br&gt;addresses or this information is unavailable.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterIrq</objectName>
                <objectId>7</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER (0..255)</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of the IRQ (interrupt) used for this physical&lt;br&gt;hardware interface.  The number zero (0) indicates that&lt;br&gt;this device does not use an IRQ or this information is&lt;br&gt;unavailable.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterDma</objectName>
                <objectId>8</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of the DMA channel used for this physical hardware&lt;br&gt;interface.  The number -1 indicates that this device does not&lt;br&gt;use a DMA channel or this information is unavailable.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterMemAddr</objectName>
                <objectId>9</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The base memory address used by this physical hardware&lt;br&gt;interface.  The number zero (0) indicates that this&lt;br&gt;device does not use system memory or this information&lt;br&gt;is unavailable.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterPort</objectName>
                <objectId>10</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The port number of the interface for multi-port NICs.&lt;br&gt;A port number of -1 indicates that the port could not&lt;br&gt;be determined.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterDuplexState</objectName>
                <objectId>11</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>This variable describes the current duplex state of the&lt;br&gt;adapter.  A value of unknown indicates that the duplex&lt;br&gt;state could not be determined.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterCondition</objectName>
                <objectId>12</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The condition of this physical adapter.&lt;br&gt;&lt;br&gt;This value is driven by the cpqNicIfPhysAdapterStatus object&lt;br&gt;as follows:&lt;br&gt;&lt;br&gt;other(1)&lt;br&gt;Indicates that the value of the Physical Adapter&lt;br&gt;Status is unknown(1).&lt;br&gt;&lt;br&gt;ok(2)&lt;br&gt;Indicates that the value of the Physical Adapter&lt;br&gt;Status is ok(2).&lt;br&gt;&lt;br&gt;degraded(3)&lt;br&gt;Defined for all condition variables, but is&lt;br&gt;not applicable for single adapters.&lt;br&gt;&lt;br&gt;failed(4)&lt;br&gt;Indicates that the value of the Physical Adapter&lt;br&gt;Status is generalFailure(4) or linkFailure(5).</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterState</objectName>
                <objectId>13</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The fault tolerant state of this adapter.  Although&lt;br&gt;this value is valid for adapters that are not&lt;br&gt;part of a fault tolerant group, it only provides&lt;br&gt;additional information when the adapter participates in&lt;br&gt;a group.&lt;br&gt;&lt;br&gt;The following values are valid:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;The fault tolerant state could not be determined.  The&lt;br&gt;instrument agent may need to be upgraded.&lt;br&gt;&lt;br&gt;active(2)&lt;br&gt;The adapter is actively participating in the network.&lt;br&gt;This state is displayed for adapters that are not part&lt;br&gt;of a fault tolerant group and for adapters in a fault&lt;br&gt;tolerant group that are not in the standby state.&lt;br&gt;&lt;br&gt;standby(3)&lt;br&gt;The adapter is ready to assume network activity in case&lt;br&gt;of a failure of the active adapter.&lt;br&gt;&lt;br&gt;failed(4)&lt;br&gt;The adapter has failed and cannot participate on the&lt;br&gt;network.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterStatus</objectName>
                <objectId>14</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The physical adapter status.&lt;br&gt;&lt;br&gt;The following values are valid:&lt;br&gt;&lt;br&gt;unknown(1)&lt;br&gt;The instrument agent was not able to determine the status&lt;br&gt;of the adapter.  The instrument agent may need to be&lt;br&gt;upgraded.&lt;br&gt;&lt;br&gt;ok(2)&lt;br&gt;The physical adapter is operating properly.&lt;br&gt;&lt;br&gt;generalFailure(3)&lt;br&gt;The physical adapter has failed.&lt;br&gt;&lt;br&gt;linkFailure(4)&lt;br&gt;The physical adapter has lost link.  Check the&lt;br&gt;cable connections to this adapter.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterStatsValid</objectName>
                <objectId>15</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>INTEGER</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>This value indicates whether the following statistics&lt;br&gt;in the table are accurate.  Some adapters may not be&lt;br&gt;able to report the statistics accurately, and the&lt;br&gt;statistics should not be reported for these adapters.&lt;br&gt;&lt;br&gt;The following values are valid:&lt;br&gt;&lt;br&gt;true(1)&lt;br&gt;The statistics are accurate.&lt;br&gt;&lt;br&gt;false(2)&lt;br&gt;The statistics are not accurate and should not&lt;br&gt;be used.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterGoodTransmits</objectName>
                <objectId>16</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames successfully transmitted&lt;br&gt;by the physical adapter.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterGoodReceives</objectName>
                <objectId>17</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames successfully received by the&lt;br&gt;physical adapter.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterBadTransmits</objectName>
                <objectId>18</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames that were not transmitted by&lt;br&gt;the adapter because of an error.  This counter is the&lt;br&gt;sum of MIB items cpqNicIfPhysAdapterDeferredTransmissions&lt;br&gt;cpqNicIfPhysAdapterLateCollisions,&lt;br&gt;cpqNicIfPhysAdapterExcessiveCollisions,&lt;br&gt;cpqNicIfPhysAdapterCarrierSenseErrors, and&lt;br&gt;cpqNicIfPhysAdapterInternalMacTransmitErrors.&lt;br&gt;&lt;br&gt;If this counter increments frequently, check the&lt;br&gt;more detailed error statistics and take appropriate&lt;br&gt;action.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterBadReceives</objectName>
                <objectId>19</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames that were received by the adapter&lt;br&gt;but which had an error.  This counter is the sum of&lt;br&gt;mib items cpqNicIfPhysAdapterAlignmentErrors,&lt;br&gt;cpqNicIfPhysAdapterFCSErrors,&lt;br&gt;cpqNicIfPhysAdapterFrameTooLongs, and&lt;br&gt;cpqNicIfPhysAdapterInternalMacReceiveErrors.&lt;br&gt;&lt;br&gt;If this counter increments frequently, check the&lt;br&gt;more detailed error statistics and take appropriate&lt;br&gt;action.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterAlignmentErrors</objectName>
                <objectId>20</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames received on a particular&lt;br&gt;interface that are not an integral number of&lt;br&gt;octets in length and do not pass the FCS check.&lt;br&gt;The alignment of a frame is checked by the&lt;br&gt;receiver after the packet has failed the&lt;br&gt;Cyclical Redundancy Check (CRC). Misaligned&lt;br&gt;packets do not end on an 8-bit boundary.&lt;br&gt;All packets contain a set number of bytes&lt;br&gt;and must end after a defined number of bytes.&lt;br&gt;Packets that do not end on a byte boundary&lt;br&gt;fail the alignment check.&lt;br&gt;&lt;br&gt;Faulty components may be the cause of alignment&lt;br&gt;errors. Check the following:&lt;br&gt;&lt;br&gt;Segment too long: Nodes at the far end of the&lt;br&gt;cabling system transmit, unaware that a station&lt;br&gt;at the other end has already gained control of&lt;br&gt;the medium by transmitting the first 64 bytes&lt;br&gt;of a frame.&lt;br&gt;&lt;br&gt;Failing cable: Packet data traveling through&lt;br&gt;shorted or damaged cabling may become corrupt&lt;br&gt;before reaching the destination station.&lt;br&gt;&lt;br&gt;Segment not grounded properly: Improper grounding&lt;br&gt;of a segment may allow ground-induced noise to&lt;br&gt;corrupt data flow.&lt;br&gt;&lt;br&gt;Improper termination: If a cable segment is not&lt;br&gt;properly terminated, allowing the signal to be&lt;br&gt;absorbed upon reaching the end of the segment,&lt;br&gt;a partial signal will bounce back and collide&lt;br&gt;with existing signals.&lt;br&gt;&lt;br&gt;Noisy cable: Interference or noise produced by&lt;br&gt;motors or other devices can distort the signals&lt;br&gt;and cause CRC/Alignment errors.&lt;br&gt;&lt;br&gt;Deaf/partially deaf node: A faulty station that&lt;br&gt;cannot hear the activity is considered a deaf node.&lt;br&gt;If you suspect a deaf node, replace the NIC.&lt;br&gt;&lt;br&gt;Failing repeater, transceiver, or controller:&lt;br&gt;Repeaters, transceivers, and controllers can&lt;br&gt;disrupt the network signal, transmit erroneous&lt;br&gt;signals on the wire, or ignore incoming packets.&lt;br&gt;Perform the following steps:&lt;br&gt;&lt;br&gt;1.  If your NIC is continuously transmitting,&lt;br&gt;it causes erroneous signals, or 'jabber'.&lt;br&gt;Replace a jabbering transmitter to ensure&lt;br&gt;proper network performance.&lt;br&gt;&lt;br&gt;2.  Check your hub or switch. This component&lt;br&gt;may be at fault.  Use the diagnostics from&lt;br&gt;the component manufacturer to help you&lt;br&gt;determine if a problem exists.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterFCSErrors</objectName>
                <objectId>21</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames received on a particular&lt;br&gt;interface that are an integral number of octets&lt;br&gt;in length but do not pass the FCS check.&lt;br&gt;&lt;br&gt;&lt;br&gt;Faulty components may be the cause of FCS&lt;br&gt;errors. Check the following:&lt;br&gt;&lt;br&gt;Segment too long: Nodes at the far end of the&lt;br&gt;cabling system transmit, unaware that a station&lt;br&gt;at the other end has already gained control of&lt;br&gt;the medium by transmitting the first 64 bytes&lt;br&gt;of a frame.&lt;br&gt;&lt;br&gt;Failing cable: Packet data traveling through&lt;br&gt;shorted or damaged cabling may become corrupt&lt;br&gt;before reaching the destination station.&lt;br&gt;&lt;br&gt;Segment not grounded properly: Improper grounding&lt;br&gt;of a segment may allow ground-induced noise to&lt;br&gt;corrupt data flow.&lt;br&gt;&lt;br&gt;Improper termination: If a cable segment is not&lt;br&gt;properly terminated, allowing the signal to be&lt;br&gt;absorbed upon reaching the end of the segment,&lt;br&gt;a partial signal will bounce back and collide&lt;br&gt;with existing signals.&lt;br&gt;&lt;br&gt;Noisy cable: Interference or noise produced by&lt;br&gt;motors or other devices can distort the signals&lt;br&gt;and cause CRC/Alignment errors.&lt;br&gt;&lt;br&gt;Deaf/partially deaf node: A faulty station that&lt;br&gt;cannot hear the activity is considered a deaf node.&lt;br&gt;If you suspect a deaf node, replace the NIC.&lt;br&gt;&lt;br&gt;Failing repeater, transceiver, or controller:&lt;br&gt;Repeaters, transceivers, and controllers can&lt;br&gt;disrupt the network signal, transmit erroneous&lt;br&gt;signals on the wire, or ignore incoming packets.&lt;br&gt;Perform the following steps:&lt;br&gt;&lt;br&gt;1.  If your NIC is continuously transmitting,&lt;br&gt;it causes erroneous signals, or 'jabber'.&lt;br&gt;Replace a jabbering transmitter to ensure&lt;br&gt;proper network performance.&lt;br&gt;&lt;br&gt;2.  Check your hub or switch. This component&lt;br&gt;may be at fault.  Use the diagnostics from&lt;br&gt;the component manufacturer to help you&lt;br&gt;determine if a problem exists.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterSingleCollisionFrames</objectName>
                <objectId>22</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of single collision packets:&lt;br&gt;This counter contains the number of packets&lt;br&gt;that are involved in a single collision and&lt;br&gt;are subsequently transmitted successfully.&lt;br&gt;&lt;br&gt;These errors show that the network has light&lt;br&gt;to moderate traffic.  If single collisions&lt;br&gt;become more frequent, the count for multiple&lt;br&gt;collisions escalates.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterMultipleCollisionFrames</objectName>
                <objectId>23</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of multiple collision packets:&lt;br&gt;This counter contains the number of packets&lt;br&gt;that are involved in multiple collisions and&lt;br&gt;are subsequently transmitted successfully.&lt;br&gt;&lt;br&gt;These errors mean that the network is experiencing&lt;br&gt;moderate to heavy traffic.  If multiple collisions&lt;br&gt;become more frequent, the count for excessive&lt;br&gt;collisions escalates.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterDeferredTransmissions</objectName>
                <objectId>24</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of packets deferred before transmission:&lt;br&gt;This counter contains the number of packets whose&lt;br&gt;transmission was delayed on its first attempt&lt;br&gt;because the medium was busy.  Packets involved&lt;br&gt;in any collisions are not counted.  Frames&lt;br&gt;that wait before transmission are counted.&lt;br&gt;This statistic will be incremented often during&lt;br&gt;normal operation on a busy network.&lt;br&gt;&lt;br&gt;Deferred transmissions occur when the network&lt;br&gt;is extremely busy; so busy that the NIC did&lt;br&gt;not try to transmit.  High counts of multiple&lt;br&gt;collisions and excessive collisions also occur.&lt;br&gt;&lt;br&gt;Deferred transmissions indicate that this segment&lt;br&gt;of the LAN is overcrowded.  Reduce the traffic&lt;br&gt;by reorganizing the LAN.  For example, if you&lt;br&gt;have 100 stations on one Ethernet bus, break it&lt;br&gt;into two Ethernet segments by adding a NIC to&lt;br&gt;your server.  In this way you can balance the&lt;br&gt;load by putting 50 stations on one segment and&lt;br&gt;50 on the other.  If a few isolated stations&lt;br&gt;create the traffic, put them on a separate segment.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterLateCollisions</objectName>
                <objectId>25</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>Late collisions may be a symptom of cabling&lt;br&gt;problems.  A late collision is one that occurred&lt;br&gt;64 bytes or more into the packet.&lt;br&gt;&lt;br&gt;Late collisions may be an indication that a&lt;br&gt;segment is longer than allowed by the wiring&lt;br&gt;specifications.&lt;br&gt;&lt;br&gt;A station will believe it has control of the&lt;br&gt;cable segment if it has already transmitted 64&lt;br&gt;bytes.  If another node at the far end of the&lt;br&gt;segment has not yet seen the packet, and transmits,&lt;br&gt;this packet will collide with the first&lt;br&gt;transmission after the first 64 bytes have been&lt;br&gt;sent.  Ensure that your segment length does not&lt;br&gt;exceed the maximum length allowed.&lt;br&gt;&lt;br&gt;Because the location of cabling problems can be very&lt;br&gt;difficult to detect on an Ethernet network, you may&lt;br&gt;want to 'shorten' an Ethernet segment (remove portions&lt;br&gt;of the network to isolate problems) until the problems&lt;br&gt;are no longer seen, and then expand the network until&lt;br&gt;the problem recurs.&lt;br&gt;&lt;br&gt;If this counter increments quickly in a short&lt;br&gt;period of time, it may mean that the network&lt;br&gt;card is running in half duplex mode, but your&lt;br&gt;hub or switch port is configured for full duplex&lt;br&gt;mode.  Compare your network card's configuration&lt;br&gt;with the port's configuration.&lt;br&gt;&lt;br&gt;Late collisions are also included in other&lt;br&gt;collision-related statistics.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterExcessiveCollisions</objectName>
                <objectId>26</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of packets aborted during transmission&lt;br&gt;due to excessive collisions: This counter contains&lt;br&gt;the number of packets that, due to excessive&lt;br&gt;collisions, are not transmitted successfully.&lt;br&gt;A station may attempt to transmit up to 16 times&lt;br&gt;before it must abort the attempt.  Once the abort&lt;br&gt;occurs, this counter increments.&lt;br&gt;&lt;br&gt;If you see an increase in deferred transmissions&lt;br&gt;as well as excessive collisions, the network is&lt;br&gt;extremely busy and this segment of the LAN is&lt;br&gt;overcrowded.  Reduce the traffic by reorganizing&lt;br&gt;your LAN or adding a NIC to the server.  For example,&lt;br&gt;if you have 100 stations on one Ethernet bus, break&lt;br&gt;it into two Ethernet buses by adding a NIC to your&lt;br&gt;server.   In this way you can balance the load by&lt;br&gt;putting 50 stations on one bus and 50 on the other.&lt;br&gt;If there are a few isolated stations creating the&lt;br&gt;traffic, try placing them on a separate bus.&lt;br&gt;&lt;br&gt;Faulty components may be the cause of excessive&lt;br&gt;collisions. Check the following:&lt;br&gt;&lt;br&gt;Segment too long: Nodes at the far end of the&lt;br&gt;cabling system transmit, unaware that a station&lt;br&gt;at the other end has already gained control of&lt;br&gt;the medium by transmitting the first 64 bytes&lt;br&gt;of a frame.&lt;br&gt;&lt;br&gt;Failing cable: Packet data traveling through&lt;br&gt;shorted or damaged cabling may become corrupt&lt;br&gt;before reaching the destination station.&lt;br&gt;&lt;br&gt;Segment not grounded properly: Improper grounding&lt;br&gt;of a segment may allow ground-induced noise to&lt;br&gt;corrupt data flow.&lt;br&gt;&lt;br&gt;Improper termination: If a cable segment is not&lt;br&gt;properly terminated, allowing the signal to be&lt;br&gt;absorbed upon reaching the end of the segment,&lt;br&gt;a partial signal will bounce back and collide&lt;br&gt;with existing signals.&lt;br&gt;&lt;br&gt;Noisy cable: Interference or noise produced by&lt;br&gt;motors or other devices can distort the signals&lt;br&gt;and cause CRC/Alignment errors.&lt;br&gt;&lt;br&gt;Deaf/partially deaf node: A faulty station that&lt;br&gt;cannot hear the activity is considered a deaf node.&lt;br&gt;If you suspect a deaf node, replace the NIC.&lt;br&gt;&lt;br&gt;Failing repeater, transceiver, or controller:&lt;br&gt;Repeaters, transceivers, and controllers can&lt;br&gt;disrupt the network signal, transmit erroneous&lt;br&gt;signals on the wire, or ignore incoming packets.&lt;br&gt;Perform the following steps:&lt;br&gt;&lt;br&gt;1.  If your NIC is continuously transmitting,&lt;br&gt;it causes erroneous signals, or 'jabber.'&lt;br&gt;Replace a jabbering transmitter to ensure&lt;br&gt;proper network performance.&lt;br&gt;&lt;br&gt;2.  Check your hub or switch. This component&lt;br&gt;may be at fault.  Use the diagnostics from&lt;br&gt;the component manufacturer to help you&lt;br&gt;determine if a problem exists.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterInternalMacTransmitErrors</objectName>
                <objectId>27</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames for which transmission on a&lt;br&gt;particular interface fails due to an internal&lt;br&gt;MAC sublayer transmit error. A frame is only&lt;br&gt;counted by an instance of this object if it is&lt;br&gt;not counted by the corresponding instance of&lt;br&gt;either the cpqNicIfPhysAdapterLateCollisions object,&lt;br&gt;the cpqNicIfPhysAdapterExcessiveCollisions object,&lt;br&gt;or the cpqNicIfPhysAdapterCarrierSenseErrors object.&lt;br&gt;&lt;br&gt;The precise meaning of the count represented by&lt;br&gt;an instance of this object is implementation-&lt;br&gt;specific.  In particular, an instance of this&lt;br&gt;object may represent a count of transmission&lt;br&gt;errors on a particular interface that are not&lt;br&gt;otherwise counted.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterCarrierSenseErrors</objectName>
                <objectId>28</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>The number of packets transmitted with carrier&lt;br&gt;sense errors:  This counter contains the number&lt;br&gt;of times that the carrier sense signal from the&lt;br&gt;physical layer interface was not asserted or was&lt;br&gt;de-asserted during transmission of a packet without&lt;br&gt;collision.&lt;br&gt;&lt;br&gt;The carrier sense signal is an ongoing activity&lt;br&gt;of a data station to detect whether or not another&lt;br&gt;station is transmitting.  Carrier sense errors&lt;br&gt;are detected when a station transmits a frame and&lt;br&gt;does not detect its own signal on the wire.&lt;br&gt;&lt;br&gt;If you receive carrier sense errors, check the&lt;br&gt;following:&lt;br&gt;&lt;br&gt;Failing cable: Packet data traveling through&lt;br&gt;shorted or damaged cabling may cause a signal loss.&lt;br&gt;Ensure that your cable is working and plugged in&lt;br&gt;properly.&lt;br&gt;&lt;br&gt;Segment not grounded properly: Improper grounding&lt;br&gt;of a segment may allow ground-induced noise to&lt;br&gt;interrupt the signal.  Ensure that you have&lt;br&gt;properly grounded all segments.&lt;br&gt;&lt;br&gt;Noisy cable: Interference or noise produced by&lt;br&gt;motors or other devices can interrupt the signals.&lt;br&gt;&lt;br&gt;Deaf/partially deaf node: A faulty station that&lt;br&gt;cannot hear the activity is considered a deaf node.&lt;br&gt;If you suspect a deaf node, the network interface&lt;br&gt;card should be replaced.&lt;br&gt;&lt;br&gt;Failing hub, switch, or controller: Repeaters,&lt;br&gt;switches and controllers can disrupt the network&lt;br&gt;signal, transmit erroneous signals on the wire,&lt;br&gt;or ignore incoming packets.  Perform the following&lt;br&gt;steps:&lt;br&gt;&lt;br&gt;1.  Swap out the adapter, adapter cable, and&lt;br&gt;adapter attachment point, one at a time.&lt;br&gt;If you find a faulty component, replace it.&lt;br&gt;&lt;br&gt;2.  If none of the items listed above help you&lt;br&gt;isolate the problem, you may need to replace&lt;br&gt;the switch or hub.  Use a network analyzer&lt;br&gt;to isolate the problem area.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterFrameTooLongs</objectName>
                <objectId>29</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames received on a particular&lt;br&gt;interface that exceed the maximum permitted&lt;br&gt;frame size.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterInternalMacReceiveErrors</objectName>
                <objectId>30</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>Counter</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A count of frames for which reception on a&lt;br&gt;particular interface fails due to an internal&lt;br&gt;MAC sublayer receive error. A frame is only&lt;br&gt;counted by an instance of this object if it is&lt;br&gt;not counted by the corresponding instance of&lt;br&gt;either the cpqNicIfPhysAdapterStatsFrameTooLongs&lt;br&gt;object, the cpqNicIfPhysAdapterStatsAlignmentErrors&lt;br&gt;object, or the cpqNicIfPhysAdapterStatsFCSErrors&lt;br&gt;object.&lt;br&gt;&lt;br&gt;The precise meaning of the count represented by&lt;br&gt;an instance of this object is implementation-&lt;br&gt;specific.  In particular, an instance of this&lt;br&gt;object may represent a count of receive errors&lt;br&gt;on a particular interface that are not&lt;br&gt;otherwise counted.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterHwLocation</objectName>
                <objectId>31</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>optional</status>
                <description>A text description of the hardware location, on complex&lt;br&gt;multi SBB hardware only, for the physical adapter.&lt;br&gt;A NULL string indicates that the hardware location could not&lt;br&gt;be determined or is irrelevant.</description>
            </objectType>
        </mibObject>
        <mibObject>
            <objectType>
                <objectName>cpqNicIfPhysAdapterPartNumber</objectName>
                <objectId>32</objectId>
                <parent>cpqNicIfPhysAdapterEntry</parent>
                <syntax>
                    <type>DisplayString (SIZE (0..255))</type>
                </syntax>
                <access>read-only</access>
                <status>mandatory</status>
                <description>A text description of the hardware part number.</description>
            </objectType>
        </mibObject>
    </objects>
</mib>
